- sql: |
    create table t1(t1v1 int, t1v2 int);
    create table t2(t2v1 int, t2v3 int);
    create table t3(t3v2 int, t3v4 int);
    insert into t1 values (0, 0), (1, 1), (2, 2);
    insert into t2 values (0, 200), (1, 201), (2, 202);
    insert into t3 values (0, 300), (1, 301), (2, 302);
  tasks:
    - execute
- sql: |
    select * from t2, t1 where t1v1 = t2v1;
  desc: Test whether the optimizer enumerates all 2-join orders.
  tasks:
    - explain[disable_pruning]:logical_join_orders
    - explain:logical_join_orders
    - execute
- sql: |
    select * from t2, t1, t3 where t1v1 = t2v1 and t1v1 = t3v2;
  desc: Test whether the optimizer enumerates all 3-join orders. (It should)
  tasks:
    - explain[disable_pruning]:logical_join_orders
    - explain:logical_join_orders
    - execute
- sql: |
    select * from t2, t1, t3 where t1v1 = t2v1 and t1v2 = t3v2;
  desc: Test whether the optimizer enumerates all 3-join orders. (It don't currently)
  tasks:
    - explain[disable_pruning]:logical_join_orders
    - explain:logical_join_orders
    - execute
- sql: |
    select * from t1, t2, t3 where t1v1 = t2v1 and t1v2 = t3v2;
  desc: Test whether the optimizer enumerates all 3-join orders. (It don't currently)
  tasks:
    - explain[disable_pruning]:logical_join_orders
    - explain:logical_join_orders
    - execute
- sql: |
    select * from t1, (select * from t2, t3) where t1v1 = t2v1 and t1v2 = t3v2;
  desc: Test whether the optimizer enumerates all 3-join orders. (It don't currently)
  tasks:
    - explain[disable_pruning]:logical_join_orders,physical_optd
    - explain:logical_join_orders,physical_optd
    - execute
